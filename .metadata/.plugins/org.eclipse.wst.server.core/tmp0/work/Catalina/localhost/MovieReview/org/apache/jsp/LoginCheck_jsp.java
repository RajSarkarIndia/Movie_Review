/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/11.0.9
 * Generated at: 2025-08-09 14:08:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class LoginCheck_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\" />\n");
      out.write("<title>User Login</title>\n");
      out.write("<style>\n");
      out.write("  @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap');\n");
      out.write("  \n");
      out.write("  body, html {\n");
      out.write("    margin: 0; padding: 0;\n");
      out.write("    height: 100%;\n");
      out.write("    font-family: 'Poppins', sans-serif;\n");
      out.write("    overflow: hidden;\n");
      out.write("    background: linear-gradient(270deg, #6a8cd4, #9a85ca, #7465a1, #b796d9);\n");
      out.write("    background-size: 800% 800%;\n");
      out.write("    animation: gradientAnimate 25s ease infinite;\n");
      out.write("    display: flex;\n");
      out.write("    justify-content: center;\n");
      out.write("    align-items: center;\n");
      out.write("  }\n");
      out.write("  @keyframes gradientAnimate {\n");
      out.write("    0%{background-position:0% 50%}\n");
      out.write("    50%{background-position:100% 50%}\n");
      out.write("    100%{background-position:0% 50%}\n");
      out.write("  }\n");
      out.write("\n");
      out.write("  #particles {\n");
      out.write("    position: fixed;\n");
      out.write("    top: 0; left: 0; right: 0; bottom: 0;\n");
      out.write("    pointer-events: none;\n");
      out.write("    overflow: hidden;\n");
      out.write("    z-index: 0;\n");
      out.write("  }\n");
      out.write("  .particle {\n");
      out.write("    position: absolute;\n");
      out.write("    border-radius: 50%;\n");
      out.write("    background: rgba(255,255,255,0.12);\n");
      out.write("    animation: floatUp 15s linear infinite;\n");
      out.write("  }\n");
      out.write("  @keyframes floatUp {\n");
      out.write("    0% { transform: translateY(100vh) scale(0.6); opacity: 1; }\n");
      out.write("    100% { transform: translateY(-20vh) scale(1); opacity: 0; }\n");
      out.write("  }\n");
      out.write("\n");
      out.write("  .login-card {\n");
      out.write("    position: relative;\n");
      out.write("    background: rgba(255, 255, 255, 0.96);\n");
      out.write("    border-radius: 22px;\n");
      out.write("    box-shadow: 0 18px 45px rgba(0,0,0,0.25);\n");
      out.write("    padding: 48px 40px 56px;\n");
      out.write("    width: 360px;\n");
      out.write("    z-index: 1;\n");
      out.write("    text-align: center;\n");
      out.write("  }\n");
      out.write("  .login-card h3 {\n");
      out.write("    margin-bottom: 28px;\n");
      out.write("    font-size: 2.1rem;\n");
      out.write("    color: #3b1d90;\n");
      out.write("    font-weight: 600;\n");
      out.write("    letter-spacing: 1px;\n");
      out.write("  }\n");
      out.write("\n");
      out.write("  label {\n");
      out.write("    display: block;\n");
      out.write("    text-align: left;\n");
      out.write("    font-weight: 600;\n");
      out.write("    color: #555273;\n");
      out.write("    margin: 20px 0 8px 0;\n");
      out.write("    font-size: 1rem;\n");
      out.write("  }\n");
      out.write("  input[type=\"text\"], input[type=\"password\"] {\n");
      out.write("    width: 100%;\n");
      out.write("    padding: 14px 18px;\n");
      out.write("    border: 2px solid #cac3e2;\n");
      out.write("    border-radius: 12px;\n");
      out.write("    font-size: 1.1rem;\n");
      out.write("    transition: border-color 0.3s ease, box-shadow 0.3s ease;\n");
      out.write("    box-sizing: border-box;\n");
      out.write("  }\n");
      out.write("  input[type=\"text\"]:focus, input[type=\"password\"]:focus {\n");
      out.write("    outline: none;\n");
      out.write("    border-color: #685cd4;\n");
      out.write("    box-shadow: 0 0 16px #685cd4aa;\n");
      out.write("  }\n");
      out.write("\n");
      out.write("  input[type=\"submit\"] {\n");
      out.write("    margin-top: 38px;\n");
      out.write("    width: 100%;\n");
      out.write("    background: #6a65d6;\n");
      out.write("    border: none;\n");
      out.write("    border-radius: 14px;\n");
      out.write("    color: white;\n");
      out.write("    font-size: 1.25rem;\n");
      out.write("    font-weight: 700;\n");
      out.write("    padding: 16px 0;\n");
      out.write("    cursor: pointer;\n");
      out.write("    box-shadow: 0 10px 30px #6a65d6cc;\n");
      out.write("    transition: background 0.3s ease, box-shadow 0.3s ease;\n");
      out.write("  }\n");
      out.write("  input[type=\"submit\"]:hover {\n");
      out.write("    background: #5049b6;\n");
      out.write("    box-shadow: 0 14px 38px #5049b6dd;\n");
      out.write("  }\n");
      out.write("\n");
      out.write("  @media (max-width: 400px) {\n");
      out.write("    .login-card {\n");
      out.write("      width: 90vw;\n");
      out.write("      padding: 36px 24px 40px;\n");
      out.write("    }\n");
      out.write("    .login-card h3 {\n");
      out.write("      font-size: 1.75rem;\n");
      out.write("    }\n");
      out.write("  }\n");
      out.write("</style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("<div id=\"particles\"></div>\n");
      out.write("\n");
      out.write("<div class=\"login-card\" role=\"main\" aria-label=\"User Login Form\">\n");
      out.write("  <h3>User Login</h3>\n");
      out.write("  <form action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/LoginCheckUser\" method=\"post\" autocomplete=\"off\">\n");
      out.write("    <label for=\"UserName\">User Name</label>\n");
      out.write("    <input id=\"UserName\" name=\"UserName\" type=\"text\" required autocomplete=\"username\" autofocus>\n");
      out.write("\n");
      out.write("    <label for=\"Password\">Password</label>\n");
      out.write("    <input id=\"Password\" name=\"Password\" type=\"password\" required autocomplete=\"current-password\">\n");
      out.write("\n");
      out.write("    <input type=\"submit\" value=\"Login\">\n");
      out.write("  </form>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("  const particlesContainer = document.getElementById('particles');\n");
      out.write("  const particleCount = 30;\n");
      out.write("  for (let i = 0; i < particleCount; i++) {\n");
      out.write("    const p = document.createElement('div');\n");
      out.write("    p.classList.add('particle');\n");
      out.write("    const size = (Math.random() * 40 + 20).toFixed(2);\n");
      out.write("    p.style.width = `");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${size}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("px`;\n");
      out.write("    p.style.height = `");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${size}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("px`;\n");
      out.write("    p.style.left = `");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${Math.random() * 100}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("vw`;\n");
      out.write("    p.style.animationDuration = `");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${10 + Math.random() * 10}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("s`;\n");
      out.write("    p.style.animationDelay = `");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${Math.random() * 15}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("s`;\n");
      out.write("    particlesContainer.appendChild(p);\n");
      out.write("  }\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
