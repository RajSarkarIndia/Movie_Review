/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/11.0.9
 * Generated at: 2025-08-06 17:08:01 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.List;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("java.util.List");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Movies</title>\n");
      out.write("<style>\n");
      out.write("  /* Header list styles */\n");
      out.write("  ul {\n");
      out.write("    display: flex;\n");
      out.write("    justify-content: space-between;\n");
      out.write("    align-items: center;\n");
      out.write("    list-style: none;\n");
      out.write("    padding: 0;\n");
      out.write("    margin: 0 0 20px 0;\n");
      out.write("    width: 100%;\n");
      out.write("  }\n");
      out.write("  li {\n");
      out.write("    margin: 0;\n");
      out.write("    flex: 1;\n");
      out.write("    text-align: center;\n");
      out.write("  }\n");
      out.write("  li:first-child {\n");
      out.write("    text-align: left;\n");
      out.write("  }\n");
      out.write("  li:last-child {\n");
      out.write("    text-align: right;\n");
      out.write("  }\n");
      out.write("  form {\n");
      out.write("    margin: 0;\n");
      out.write("  }\n");
      out.write("\n");
      out.write("  /* Container for movies covering 50% width and centered */\n");
      out.write("  .movie-container {\n");
      out.write("    display: flex;\n");
      out.write("    flex-wrap: wrap;\n");
      out.write("    justify-content: flex-start;\n");
      out.write("    gap: 16px;          /* Gap between cards */\n");
      out.write("    width: 50%;\n");
      out.write("    margin: 0 auto;\n");
      out.write("  }\n");
      out.write("  /* Each movie card with fixed width and gap */\n");
      out.write("  .movie-item {\n");
      out.write("    border: 1px solid black;\n");
      out.write("    box-sizing: border-box;\n");
      out.write("    width: 240px;       /* Fixed width */\n");
      out.write("    text-align: center;\n");
      out.write("  }\n");
      out.write("  .movie-item img {\n");
      out.write("    width: 240px;\n");
      out.write("    height: 320px;      /* Fixed height to expand smaller images */\n");
      out.write("    object-fit: cover;  /* Crop/expand image to fit without distortion */\n");
      out.write("    display: block;\n");
      out.write("  }\n");
      out.write("  .movie-item h6 {\n");
      out.write("    margin: 8px;\n");
      out.write("  }\n");
      out.write("\n");
      out.write("  /* Responsive fallback: full width on smaller screens */\n");
      out.write("  @media (max-width: 768px) {\n");
      out.write("    .movie-container {\n");
      out.write("      width: 100%;\n");
      out.write("      justify-content: center;\n");
      out.write("    }\n");
      out.write("    .movie-item {\n");
      out.write("      width: 45%; /* roughly 2 per row */\n");
      out.write("    }\n");
      out.write("    .movie-item img {\n");
      out.write("      width: 100%;\n");
      out.write("      height: auto;\n");
      out.write("      object-fit: contain;\n");
      out.write("    }\n");
      out.write("  }\n");
      out.write("  @media (max-width: 480px) {\n");
      out.write("    .movie-item {\n");
      out.write("      width: 100%;\n");
      out.write("    }\n");
      out.write("    .movie-item img {\n");
      out.write("      width: 100%;\n");
      out.write("      height: auto;\n");
      out.write("      object-fit: contain;\n");
      out.write("    }\n");
      out.write("  }\n");
      out.write("</style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("<!-- header -->\n");
      out.write("<ul>\n");
      out.write("  <li><a href=\"/allGenra\">All Genre</a></li>\n");
      out.write("  <li>\n");
      out.write("    <form action=\"/MovieReview/SelectedFlim\">\n");
      out.write("      <input type=\"search\" name=\"search\" placeholder=\"Enter Flim Name\" />\n");
      out.write("      <input type=\"submit\" value=\"Search\" />\n");
      out.write("    </form>\n");
      out.write("  </li>\n");
      out.write("  <li>\n");
      out.write("    ");
 if(session.getAttribute("UserName") == null) { 
      out.write("\n");
      out.write("      <a href=\"LoginCheck.jsp\">Login</a>\n");
      out.write("    ");
 } else { 
      out.write("\n");
      out.write("      ");
      out.print( session.getAttribute("UserName") );
      out.write("\n");
      out.write("    ");
 } 
      out.write("\n");
      out.write("  </li>\n");
      out.write("</ul>\n");
      out.write("\n");
      out.write("<h3 style=\"text-align:center;\">New Movies</h3>\n");
      out.write("\n");
      out.write("<div class=\"movie-container\">\n");

    List movies = (List) session.getAttribute("movies");
    if (movies != null && !movies.isEmpty()) {
        for (int i = 0; i < Math.min(6, movies.size()); i++) {
            request.setAttribute("movie", movies.get(i));

      out.write("\n");
      out.write("    <div class=\"movie-item\">\n");
      out.write("      <a href=\"#\">\n");
      out.write("        <img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/image/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${movie.movieImageURL}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" alt=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${movie.movieName}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\n");
      out.write("        <h4>Rating: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${movie.movieRating}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</h6>\n");
      out.write("        <h4>Released: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${movie.getReleaseDate()}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</h6>\n");
      out.write("      </a>\n");
      out.write("    </div>\n");

        }
    } else {

      out.write("\n");
      out.write("    <p>No movies available.</p>\n");

    }

      out.write("\n");
      out.write("</div>\n");
      out.write("<h3 style=\"text-align:center;\">Top Movie</h3>\n");
      out.write("<div class=\"movie-container\">\n");

	
List topmovie=(List)session.getAttribute("Topmovies");
if (topmovie != null && !topmovie.isEmpty()) {
    for (int i = 0; i < Math.min(6, topmovie.size()); i++) {
        request.setAttribute("Topmovie", topmovie.get(i));

      out.write("\n");
      out.write("<div class=\"movie-item\">\n");
      out.write("  <a href=\"#\">\n");
      out.write("    <img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/image/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${Topmovie.movieImageURL}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" alt=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${Topmovie.movieName}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\n");
      out.write("    <h4>Rating: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${Topmovie.movieRating}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</h4>\n");
      out.write("  </a>\n");
      out.write("</div>\n");
      out.write("\n");
}} 
      out.write("\n");
      out.write("</div>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
